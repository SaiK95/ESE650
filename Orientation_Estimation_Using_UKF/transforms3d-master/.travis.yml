language: python

env:
    global:
        - DEPENDS="numpy"
        - INSTALL_TYPE="pip"

python:
    - 2.6
    - 3.3
    - 3.4
    - 3.5

matrix:
  include:
    # With sympy we can run doctests
    - python: 2.7
      env:
        - DEPENDS="-r doc-requirements.txt"
        - COVERAGE=1
        - DOCTESTS=1
        - DOC_DOCTEST=1
    # Absolute minimum dependencies
    - python: 2.7
      env:
        - DEPENDS="numpy==1.5.1"
    - python: 2.7
      env:
        - INSTALL_TYPE=pipe
    - python: 2.7
      env:
        - INSTALL_TYPE=setup
    - python: 2.7
      env:
        - INSTALL_TYPE=sdist
    - python: 2.7
      env:
        - DEPENDS=
        - INSTALL_TYPE=wheel
    - python: 2.7
      env:
        - DEPENDS=
        - INSTALL_TYPE=requirements

before_install:
    - source tools/travis_tools.sh
    - virtualenv venv
    - source venv/bin/activate
    - retry pip install nose # always
    - if [ -n "$DEPENDS" ]; then wheelhouse_pip_install $DEPENDS; fi
    - if [ "${COVERAGE}" == "1" ]; then
      pip install coverage;
      pip install coveralls;
      fi

install:
    - |
      if [ "$INSTALL_TYPE" == "pip" ]; then
          pip install .
      elif [ "$INSTALL_TYPE" == "pipe" ]; then
          pip install -e .
      elif [ "$INSTALL_TYPE" == "setup" ]; then
          python setup.py install
      elif [ "$INSTALL_TYPE" == "sdist" ]; then
          python setup.py egg_info  # check egg_info while we're here
          python setup.py sdist
          wheelhouse_pip_install dist/*.tar.gz
      elif [ "$INSTALL_TYPE" == "wheel" ]; then
          pip install wheel
          python setup.py bdist_wheel
          wheelhouse_pip_install dist/*.whl
      elif [ "$INSTALL_TYPE" == "requirements" ]; then
          wheelhouse_pip_install -r requirements.txt
          python setup.py install
      fi

script:
    # Change into an innocuous directory and find tests from installation
    - mkdir for_testing
    - cd for_testing
    - if [ "${COVERAGE}" == "1" ]; then
      cp ../.coveragerc .;
      COVER_ARGS="--with-coverage --cover-package transforms3d";
      fi
    - if [ "${DOCTESTS}" == "1" ]; then
      DOCTEST_ARGS="--with-doctest";
      fi
    - nosetests $COVER_ARGS $DOCTEST_ARGS transforms3d
    - if [ "${DOC_DOCTEST}" == "1" ]; then
      cd .. ;
      make html ;
      cd doc && make doctest ;
      fi

after_success:
    - if [ "${COVERAGE}" == "1" ]; then coveralls; fi
